name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Build and Publish Package
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.13"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.17.x"
          cache: "pnpm"
          cache-dependency-path: "node-wrapper/pnpm-lock.yaml"
          registry-url: "https://registry.npmjs.org"

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust-core/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust-core/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build Rust core
        working-directory: rust-core
        run: cargo build --release

      - name: Copy Rust binary to Node wrapper
        run: |
          # This command finds the compiled binary (.so, .dylib, or .dll)
          # and copies it into the node-wrapper directory so it gets packed.
          find rust-core/target/release -maxdepth 1 -type f -name "*.node" -exec cp {} node-wrapper/index.node \;

      - name: Install Node.js dependencies
        working-directory: node-wrapper
        run: pnpm install --frozen-lockfile

      - name: Run linter
        working-directory: node-wrapper
        run: pnpm lint

      - name: Run tests
        working-directory: node-wrapper
        run: pnpm test

      - name: Build TypeScript
        working-directory: node-wrapper
        run: pnpm build

      - name: Verify package contents
        working-directory: node-wrapper
        run: npm pack --dry-run

      - name: Publish to NPM
        working-directory: node-wrapper
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

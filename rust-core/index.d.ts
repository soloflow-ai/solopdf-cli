/* auto-generated by NAPI-RS */
/* eslint-disable */
/** Generate a new cryptographic key pair for digital signing */
export declare function generateSigningKeyPair(): string

/** Get key information (public key and fingerprint) from a key pair JSON */
export declare function getKeyInfoFromJson(keyPairJson: string): string

export declare function getPageCount(filePath: string): number

/** Get file checksum for user verification */
export declare function getPdfChecksum(filePath: string): string

export declare function getPdfInfoBeforeSigning(filePath: string): number

export interface SigningOptions {
  fontSize?: number
  color?: string
  xPosition?: number
  yPosition?: number
  pages?: Array<number>
  position?: string
  rotation?: number
  opacity?: number
}

export declare function signPdf(filePath: string, signatureText: string): void

export declare function signPdfLegacy(filePath: string, signatureText: string): void

/** Sign a PDF with digital signature using a private key */
export declare function signPdfWithKey(inputPath: string, outputPath: string, privateKeyB64: string, signatureText?: string | undefined | null): string

export declare function signPdfWithOptions(filePath: string, signatureText: string, options?: SigningOptions | undefined | null): void

export declare function signPdfWithVisibleText(filePath: string, signatureText: string): void

/** Verify a digital signature */
export declare function verifyPdfSignature(filePath: string, signatureInfoJson: string, publicKeyB64: string): string
